name: ci-deploy

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    permissions:
      id-token: write
      contents: read

    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::986619734899:role/gh-actions-role
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: whale-wake-user-api
          IMAGE_TAG: ${{ github.sha }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DRIVER: ${{ secrets.DB_DRIVER }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_SOURCE: ${{ secrets.DB_SOURCE }}
          SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}
          TOKEN_SYMMETRIC_KEY: ${{ secrets.TOKEN_SYMMETRIC_KEY }}
          ACCESS_TOKEN_DURATION: ${{ secrets.ACCESS_TOKEN_DURATION }}
        run: |
          docker build \
            --build-arg DB_USER=$DB_USER \
            --build-arg DB_PASSWORD=$DB_PASSWORD \
            --build-arg DB_DRIVER=$DB_DRIVER \
            --build-arg DB_NAME=$DB_NAME \
            --build-arg DB_SOURCE=$DB_SOURCE \
            --build-arg SERVER_ADDRESS=$SERVER_ADDRESS \
            --build-arg TOKEN_SYMMETRIC_KEY=$TOKEN_SYMMETRIC_KEY \
            --build-arg ACCESS_TOKEN_DURATION=$ACCESS_TOKEN_DURATION \
            -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG